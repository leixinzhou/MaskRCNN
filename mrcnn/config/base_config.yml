---
# set default device. cpu or cuda:<number>
DEVICE: cpu
DEVICE_NB: ~  # generated at runtime

NAME: ~  # Override

DATASET_PATH: ~  # Override

# Path to pretrained imagenet model
IMAGENET_FILE_NAME: resnet50_imagenet.pth

# NUMBER OF GPUs to use. For CPU use 0
GPU_COUNT: 1

# Number of images to train with on each GPU. A 12GB GPU can typically
# handle 2 images of 1024x1024px.
# Adjust based on your GPU memory and image sizes. Use the highest
# number that your GPU can handle for best performance.
IMAGES_PER_GPU: 1

TRAINING:
    # Number of training steps per epoch
    # This doesn't need to match the size of the training set. Tensorboard
    # updates are saved at the end of each epoch, so setting this to a
    # smaller number means getting more frequent TensorBoard updates.
    # Validation stats are also calculated at each epoch end and they
    # might take a while, so don't set this too small to avoid spending
    # a lot of time on validation stats.
    STEPS_PER_EPOCH: 1000
    # Number of validation steps to run at the end of every training epoch.
    # A bigger number improves accuracy of validation stats, but slows
    # down the training.
    VALIDATION_STEPS: 50
    # Learning rate and momentum
    # The Mask RCNN paper uses l:0.02, but on TensorFlow it causes
    # weights to explode. Likely due to differences in optimzer
    # implementation.
    LEARNING:
        RATE: 0.0001
        MOMENTUM: 0.9

    # Weight decay regularization
    WEIGHT_DECAY: 0.005

    BATCH_SIZE: 0 # set at runtime

BACKBONE:
    NAME: resnet50
    # feature shapes
    SHAPES: ~  # [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], set at runtime
    # The strides of each layer of the FPN Pyramid. These values
    # are based on a Resnet101 backbone.
    STRIDES: [4, 8, 16, 32, 64]

# Number of classification classes (including background)
NUM_CLASSES: ~  # Override in sub-classes

RPN:
    ANCHOR:
        # Length of square anchor side in pixels
        SCALES: [32, 64, 128, 256, 512]

        # Ratios of anchors at each cell (width/height)
        # A value of 1 represents a square anchor, and 0.5 is a wide anchor
        RATIOS: [0.5, 1, 2]

        # Anchor stride
        # If 1 then anchors are created for each cell in the backbone feature map.
        # If 2, then anchors are created for every other cell, and so on.
        STRIDE: 1
        # How many anchors per image to use for RPN training
        NB_PER_IMAGE: 256

    # Non-max suppression threshold to filter RPN proposals.
    # You can reduce this during training to generate more proposals.
    NMS_THRESHOLD: 0.7

    # Bounding box refinement standard deviation for RPN and final detections.
    BBOX_STD_DEV: [0.1, 0.1, 0.2, 0.2]
    # Use RPN ROIs or externally generated ROIs for training
    # Keep this True for most situations. Set to False if you want to train
    # the head branches on ROI generated by code rather than the ROIs from
    # the RPN. For example, to debug the classifier head without having to
    # train the RPN.
    USE_RPN_ROIS: True


# If enabled, resizes instance masks to a smaller size to reduce
# memory load. Recommended when using high-resolution images.
MINI_MASK:
    USE: True
    SHAPE: [56, 56]  # (height, width) of the mini-mask

# Input image resing
# Images are resized such that the smallest side is : IMAGE_MIN_DIM and
# the longest side is : IMAGE_MAX_DIM. In case both conditions can't
# be satisfied together the IMAGE_MAX_DIM is enforced.
IMAGE:
    RESIZE_MODE: square
    MIN_DIM: 800
    MAX_DIM: 1024
    MIN_SCALE: 0
    # Image mean (RGB)
    MEAN_PIXEL: ~  # [125, 125, 125], set at runtime
    SHAPE: ~  # [0, 0], set at runtime

PROPOSALS:
    # Number of ROIs per image to feed to classifier/mask heads
    # The Mask RCNN paper uses 512 but often the RPN doesn't generate
    # enough positive proposals to fill this and keep a positive:negative
    # ratio of 1:3. You can increase the number of proposals by adjusting
    # the RPN NMS threshold.
    TRAIN_ROIS_PER_IMAGE: 200
    # Limit top anchors by score
    PRE_NMS_LIMIT: 6000
    # ROIs kept after non-maximum supression (training and inference)
    POST_NMS_ROIS:
        TRAINING: 2000
        INFERENCE: 1000
    # Percent of positive ROIs used to train classifier/mask heads
    ROI_POSITIVE_RATIO: 0.33
    # Maximum number of ground truth instances to use in one image
    MAX_GT_INSTANCES: 100

# Pooled ROIs
HEADS:
    POOL_SIZE: 7
    MASK:
        POOL_SIZE: 14
        SHAPE: [28, 28]

BBOX_STD_DEV: [0.1, 0.1, 0.2, 0.2]

DETECTION:
    # Max number of final detections
    MAX_INSTANCES: 100
    # Minimum probability value to accept a detected instance
    # ROIs below this threshold are skipped
    MIN_CONFIDENCE: 0.7
    # Non-maximum suppression threshold for detection
    NMS_THRESHOLD: 0.3
...